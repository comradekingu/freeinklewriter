html {
  font-family: Times, Times New Roman, Georgia, serif;
  margin: 0;
  padding: 0;  
}


// manual griding with css grids

$numColumns: 12;
$gutterWidth: 15px;
  
.row{
  display: grid;
  grid-template-columns: repeat($numColumns, 1fr); // Uniform columns. No need for rounded percentages to calculate widths.
  grid-gap: $gutterWidth; // Actual gutter width. No need for negative margin hack.
}
// .show-grid [class^=col-]{
//   padding-top: 10px;
//   padding-bottom: 10px;
//   background-color: #eee;
//   background-color: rgba(86,61,124,.15);
//   border: 1px solid #ddd;
//   border: 1px solid rgba(86,61,124,.2);
// }
[class^=col-]{
  grid-column-end: span $numColumns; //Full width fallback when no column size is define for the screen size.
  padding: 10px;
}

// NESTED LOOP
// Check out the compiled css. It is very repetitive, similar to Bootstrap Grid code
// Loop through responsive breakpoints
@each $size, $abbr in (0,xs),(768px,sm),(992px,md),(1200px,lg){
  @media (min-width: $size){
    // Loop through col classes
    @for $i from 1 through $numColumns{
      .col-#{$abbr}-#{$i}{
        grid-column-end: span $i;
      }
    }
  }
}


// static pages html

body, html {
	margin: 0;
	padding: 0;
	width: 100%;
	height: 100%;
  // font-family: Verdana, Arial, Helvetica, sans-serif;
}

.container {
	max-width: 1200px;
	margin: 0 auto 0 auto;
  padding: 0 12px;
}

.main-container {
  min-height: calc(100% - 360px);
}

.user-data {
  color: hsl(344.26, 17.391%, 54%);
  font-style: italic;
}

#community-home {
  #hello {
    font-size: 2em;
    font-style: italic;
    // max-width: 800px;
    a {
      color: black;
    }
  }
  #hello-image {
    img {
      padding: 0 15px;
      width: auto;
      max-height: 220px;
    }
  }
}

#community-user-account {
  p {
    font-size: 1.4em;
  }
  a {
    text-decoration: none;
    color: black; 
  }

  a:hover {
    color: hsl(359, 60%, 50%);
    
  }

  .row {
    padding: 0 !important;
    margin: 0 !important;
  }

  .story-item-header {
    font-weight: bold;
    text-align: center;
    text-transform: uppercase;
  }    

  .story-item {
    padding-top: 5px !important;
    text-align: center;
    word-break: break-word;
    
    .story-name {
      font-size: 1.6em;      
      border-bottom: 1px solid black;
    }
    .story-name:hover {
      border-bottom: 1px solid hsl(359, 60%, 50%);
    }

    .story-detail {
      font-size: 1.2em;
      
      position: relative;
      top: 8px;
    }
  }
  
}

#community-how-it-works {
  .comment {
    font-size: 1.4em;
    font-style: italic;
  }
}

#community-story-params {
  font-size: 1.2em;
  #license-list {
    margin: 20px 0;
  }


  #privacy-form {
    .field_with_errors {
        display:  inline-block;
    }
  }

  input[type=submit] {
     background: #8d8;
    border-radius: 23px;
    border: 1px solid #40cb3c;
    color: #042;
    display: block;
    font-size: 18px;
    font-weight: bold;
    padding: 8px;
    width: 61%;
  }
  input[type=text]{
    display: block;
    padding: 8px;
    font-size: 1.61em;
    margin-top: 8px;
    border-radius: 8px;
    color: #444;
  }
  .single_license {
    vertical-align: top;
    display: inline-block;
    border: 5px solid black;
    padding: 20px;
    border-radius: 25px;
    cursor: pointer;
    margin: 10px;
    height: 300px;
    width: 120px;
    box-shadow: 10px 10px 20px 0 rgba(0,0,0,0.13);    
    text-align: center;
    img {
      width: 40px;
    }
    p:nth-child(1){
      font-style: "serif";
      font-weight: bold;
      border-bottom: 1px solid black;
    }

    a {
      font-style: italic;
      text-decoration: none;
      color: hsl(0, 0%, 40%);
    }
  }

  .single_license:hover {
    transition: all 0.3s;
    
    //transform: translate(0px, -6px);
    /* width: 140px; */
    padding: 20px 50px;
  }
  
  .well{
    background: #d6d6d6;
    color:#444;
  }
  .mute{
    color:#666;
    font-weight: normal;
  }
}